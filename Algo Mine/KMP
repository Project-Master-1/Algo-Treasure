#include <iostream>
#include <vector>
using namespace std;

void computeLPS(string pat, vector<int> &lps) {
    int len = 0, i = 1;
    lps[0] = 0;

    while (i < pat.size()) {
        if (pat[i] == pat[len]) {
            len++;
            lps[i] = len;
            i++;
        } else {
            if (len != 0)
                len = lps[len - 1];
            else
                lps[i++] = 0;
        }
    }
}

void KMPsearch(string text, string pat) {
    int n = text.size(), m = pat.size();
    vector<int> lps(m);
    computeLPS(pat, lps);

    int i = 0, j = 0;
    while (i < n) {
        if (text[i] == pat[j]) {
            i++; j++;
        }

        if (j == m) {
            cout << "Pattern found at index " << i - j << endl;
            j = lps[j - 1];
        } else if (i < n && text[i] != pat[j]) {
            if (j != 0) j = lps[j - 1];
            else i++;
        }
    }
}

int main() {
    string text = "ABABDABACDABABCABAB";
    string pat = "ABABCABAB";
    KMPsearch(text, pat);
}
