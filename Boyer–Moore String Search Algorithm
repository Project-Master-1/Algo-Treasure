#include <iostream>
#include <vector>
using namespace std;

#define NO_OF_CHARS 256

void badCharHeuristic(string pat, vector<int> &badChar) {
    int m = pat.size();
    for (int i = 0; i < NO_OF_CHARS; i++) badChar[i] = -1;
    for (int i = 0; i < m; i++) badChar[(int)pat[i]] = i;
}

void boyerMoore(string text, string pat) {
    int n = text.size(), m = pat.size();
    vector<int> badChar(NO_OF_CHARS);
    badCharHeuristic(pat, badChar);

    int s = 0;
    while (s <= (n - m)) {
        int j = m - 1;
        while (j >= 0 && pat[j] == text[s + j])
            j--;

        if (j < 0) {
            cout << "Pattern found at index " << s << endl;
            s += (s + m < n) ? m - badChar[text[s + m]] : 1;
        } else {
            s += max(1, j - badChar[text[s + j]]);
        }
    }
}

int main() {
    string text = "ABAAABCD";
    string pat = "ABC";
    boyerMoore(text, pat);
}
